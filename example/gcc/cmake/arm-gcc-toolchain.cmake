# Usage: cmake -G Ninja -DCMAKE_TOOLCHAIN_FILE=example/gcc/cmake/arm-gcc-toolchain.cmake -DCMAKE_BUILD_TYPE=Release ..

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)

# Toolchain prefix
if(NOT ARM_GCC_PREFIX)
  set(ARM_GCC_PREFIX arm-none-eabi)
endif()

find_program(ARM_GCC_C_COMPILER NAMES ${ARM_GCC_PREFIX}-gcc)
find_program(ARM_GCC_ASM_COMPILER NAMES ${ARM_GCC_PREFIX}-gcc)
find_program(ARM_GCC_AR NAMES ${ARM_GCC_PREFIX}-ar)
find_program(ARM_GCC_OBJCOPY NAMES ${ARM_GCC_PREFIX}-objcopy)
find_program(ARM_GCC_OBJDUMP NAMES ${ARM_GCC_PREFIX}-objdump)
find_program(ARM_GCC_SIZE NAMES ${ARM_GCC_PREFIX}-size)

set(CMAKE_C_COMPILER ${ARM_GCC_C_COMPILER} CACHE FILEPATH "" FORCE)
set(CMAKE_ASM_COMPILER ${ARM_GCC_ASM_COMPILER} CACHE FILEPATH "" FORCE)
set(CMAKE_AR ${ARM_GCC_AR} CACHE FILEPATH "" FORCE)
set(CMAKE_OBJCOPY ${ARM_GCC_OBJCOPY} CACHE FILEPATH "" FORCE)
set(CMAKE_OBJDUMP ${ARM_GCC_OBJDUMP} CACHE FILEPATH "" FORCE)
set(CMAKE_SIZE ${ARM_GCC_SIZE} CACHE FILEPATH "" FORCE)

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

if(NOT ARM_GCC_C_COMPILER)
  message(FATAL_ERROR "ARM GCC compiler (${ARM_GCC_PREFIX}-gcc) not found. Install toolchain or set ARM_GCC_PREFIX.")
endif()
